const fs = require('fs');
const path = require('path');
const {
  Document, Packer, Paragraph, TextRun, ImageRun,
  Table, TableRow, TableCell, AlignmentType, WidthType
} = require('docx');
const nodemailer = require('nodemailer');

const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'technoperiphery@gmail.com',
    pass: 'kuphohwsjgsqagun' // –ò—Å–ø–æ–ª—å–∑—É–π app-password
  }
});

async function sendOrderReceipt(user, order) {
  const logoPath = path.join(__dirname, 'logo.png');
  const logoImage = fs.readFileSync(logoPath);

  // –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
  const tableRows = [
    new TableRow({
      children: [
        new TableCell({ children: [new Paragraph({ text: "–¢–æ–≤–∞—Ä", bold: true })] }),
        new TableCell({ children: [new Paragraph({ text: "–¶–µ–Ω–∞", bold: true })] }),
      ]
    }),
    ...order.items.map(item =>
      new TableRow({
        children: [
          new TableCell({ children: [new Paragraph(`${item.name} √ó${item.quantity}`)] }),
          new TableCell({ children: [new Paragraph(`${(item.price * item.quantity).toFixed(2)} ‚ÇΩ`)] }),
        ]
      })
    )
  ];

  // –î–æ–∫—É–º–µ–Ω—Ç Word
  const doc = new Document({
    sections: [{
      children: [
        new Paragraph({
          alignment: AlignmentType.CENTER,
          children: [
            new ImageRun({ data: logoImage, transformation: { width: 100, height: 100 } })
          ]
        }),
        new Paragraph({
          text: "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –∑–∞–∫–∞–∑–∞",
          heading: "Heading1",
          alignment: AlignmentType.CENTER
        }),
        new Paragraph(" "),
        new Paragraph(`–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${user.name}`),
        new Paragraph(`–¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}`),
        new Paragraph(`Email: ${user.email}`),
        new Paragraph(`–î–∞—Ç–∞: ${new Date().toLocaleString()}`),
        new Paragraph(" "),
        new Table({ width: { size: 100, type: WidthType.PERCENTAGE }, rows: tableRows }),
        new Paragraph(" "),
        new Paragraph({
          children: [new TextRun({ text: `–ò—Ç–æ–≥–æ: ${order.total_price} ‚ÇΩ`, bold: true, color: "00c8ff" })]
        }),
        new Paragraph(" "),
        new Paragraph({
          alignment: AlignmentType.CENTER,
          children: [
            new TextRun({
              text: "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –¢–µ—Ö–Ω–æ–ü–µ—Ä–∏—Ñ–µ—Ä–∏—é ",
              bold: true,
              color: "00c8ff"
            })
          ]
        })
      ]
    }]
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  const buffer = await Packer.toBuffer(doc);
  const tempFile = path.join(__dirname, `receipt-${Date.now()}.docx`);
  fs.writeFileSync(tempFile, buffer);

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
  await transporter.sendMail({
    from: '"TechnoPeriphery" <technoperiphery@gmail.com>',
    to: user.email,
    subject: 'üßæ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫ –æ—Ç TechnoPeriphery',
    html: `
      <div style="font-family: Arial, sans-serif; color: #333;">
        <h2 style="color: #00c8ff;">–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑, ${user.name}!</h2>
        <p>–í–∞—à —á–µ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–æ –≤–ª–æ–∂–µ–Ω–∏–∏.</p>
        <p>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º.</p>
        <hr>
        <p style="font-size: 13px; color: #777;">TechnoPeriphery ‚Äî –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–ª–∏–∂–µ.</p>
        <img src="cid:logo" style="width: 120px; margin-top: 10px;" alt="logo">
      </div>
    `,
    attachments: [
      {
        filename: '–ß–µ–∫.docx',
        path: tempFile
      },
      {
        filename: 'logo.png',
        path: logoPath,
        cid: 'logo'
      }
    ]
  });

  // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  fs.unlinkSync(tempFile);
}

module.exports = { sendOrderReceipt };
